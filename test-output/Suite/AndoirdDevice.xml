<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="2" hostname="JangS" failures="0" tests="1" name="AndoirdDevice" time="1.35" errors="0" timestamp="2022-10-30T03:14:53 EDT">
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeClass beforeClass" time="0.011">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;io.appium.java_client.InteractsWithApps.closeApp()&amp;quot; because the return value of &amp;quot;com.qa.BaseTest.getDriver()&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "io.appium.java_client.InteractsWithApps.closeApp()" because the return value of "com.qa.BaseTest.getDriver()" is null
at com.qa.BaseTest.closeApp(BaseTest.java:144)
at com.qa.tests.LoginTests.beforeClass(LoginTests.java:46)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest afterTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="com.qa.tests.LoginTests" name="successfulLogin" time="0.0">
    <skipped/>
  </testcase> <!-- successfulLogin -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidPassword" time="0.0">
    <ignored/>
  </testcase> <!-- invalidPassword -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidUserName" time="0.0">
    <ignored/>
  </testcase> <!-- invalidUserName -->
</testsuite> <!-- AndoirdDevice -->
